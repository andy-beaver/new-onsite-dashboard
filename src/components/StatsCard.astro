---
// src/components/StatsCard.astro
import ProgressBar from './ProgressBar.astro';

interface Props {
  title: string;
  value: number;
  total: number;
  percentage: number;
  label: string;
  trend?: 'up' | 'down' | 'neutral';
  hideProgress?: boolean;
}

const { 
  title, 
  value, 
  total, 
  percentage, 
  label, 
  trend = 'neutral',
  hideProgress = false
} = Astro.props;

// Format the value to be displayed (round to integer for Status card)
const displayValue = title === 'Status' ? Math.round(value) : value;
---

<div class="bg-white dark:bg-transparent rounded-xl shadow-sm border border-gray-200 dark:border-gray-800 p-6 flex flex-col">
  <div class="flex items-start justify-between">
    <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400">{title}</h3>
    {trend !== 'neutral' && (
      <span class={`inline-flex items-center text-xs font-medium rounded-full px-2.5 py-0.5 ${
        trend === 'up' 
          ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' 
          : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'
      }`}>
        <svg 
          class="w-3 h-3 mr-1"
          fill="none" 
          stroke="currentColor" 
          viewBox="0 0 24 24" 
          xmlns="http://www.w3.org/2000/svg">
          {trend === 'up' ? (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
          ) : (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
          )}
        </svg>
        {trend === 'up' ? 'Up' : 'Down'}
      </span>
    )}
  </div>
  <div class="mt-2">
    <div class="flex items-baseline">
      <span class="text-3xl sm:text-4xl font-extrabold text-gray-900 dark:text-white">{displayValue}</span>
      {total > 0 && (
        <span class="ml-2 text-sm text-gray-500 dark:text-gray-400">/ {title === 'Status' ? Math.round(total) : total}</span>
      )}
    </div>
    <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{label}</p>
  </div>
  {!hideProgress && (
    <div class="mt-4">
      <ProgressBar value={value} max={total} />
    </div>
  )}
</div>